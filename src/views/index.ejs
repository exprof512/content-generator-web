<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Content Generator Pro</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        /* –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏, –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ–º—ã–µ Tailwind dark: */
        .fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∏—Å—Ç–æ—Ä–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */
        #historyList::-webkit-scrollbar {
            width: 8px;
        }
        #historyList::-webkit-scrollbar-track {
            background: transparent;
        }
        #historyList::-webkit-scrollbar-thumb {
            background-color: #a0aec0; /* gray-500 */
            border-radius: 4px;
        }
        .dark #historyList::-webkit-scrollbar-thumb {
             background-color: #4a5568; /* gray-700 */
        }
    </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-200 transition-colors duration-300">
<div class="container mx-auto px-4 py-8">

    <div id="errorMessage" class="hidden bg-red-100 border border-red-400 text-red-700 dark:bg-red-900 dark:border-red-600 dark:text-red-200 px-4 py-3 rounded-lg mb-4 shadow" role="alert"></div>

    <div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
        <h1 class="text-3xl font-bold text-purple-600 dark:text-purple-400">AI Content Generator</h1>
        <div class="flex gap-3 sm:gap-4">
          <button onclick="toggleDarkMode()" class="p-2 rounded-lg bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-100 transition-colors">
            <span class="theme-icon-text light-mode-visible">üåì –¢–µ–º–Ω–∞—è —Ç–µ–º–∞</span>
            <span class="theme-icon-text dark-mode-visible hidden">‚òÄÔ∏è –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞</span>
          </button>
             <button onclick="showHistory()" class="p-2 rounded-lg bg-purple-100 hover:bg-purple-200 dark:bg-purple-800 dark:hover:bg-purple-700 text-purple-800 dark:text-purple-100 transition-colors">
                üìñ –ò—Å—Ç–æ—Ä–∏—è
            </button>
        </div>
    </div>

    <div class="card bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 mb-8 transition-colors duration-300">
        <div class="mb-6 grid grid-cols-1 sm:grid-cols-3 gap-4">
             <div class="template-card p-4 rounded-lg cursor-pointer bg-blue-50 hover:bg-blue-100 dark:bg-gray-700 dark:hover:bg-gray-600 border border-transparent hover:border-blue-300 dark:hover:border-blue-500 transition-all duration-200" data-template="blog">
                <span class="text-lg mr-2">üìù</span> –ë–ª–æ–≥-–ø–æ—Å—Ç
            </div>
            <div class="template-card p-4 rounded-lg cursor-pointer bg-green-50 hover:bg-green-100 dark:bg-gray-700 dark:hover:bg-gray-600 border border-transparent hover:border-green-300 dark:hover:border-green-500 transition-all duration-200" data-template="social">
                <span class="text-lg mr-2">üì±</span> –°–æ—Ü—Å–µ—Ç–∏
            </div>
            <div class="template-card p-4 rounded-lg cursor-pointer bg-yellow-50 hover:bg-yellow-100 dark:bg-gray-700 dark:hover:bg-gray-600 border border-transparent hover:border-yellow-300 dark:hover:border-yellow-500 transition-all duration-200" data-template="product">
                <span class="text-lg mr-2">üõçÔ∏è</span> –¢–æ–≤–∞—Ä
            </div>
        </div>

        <div class="mb-6">
            <textarea
                id="prompt"
                class="w-full p-4 border rounded-lg focus:ring-2 focus:ring-purple-500 dark:focus:ring-purple-400 text-base sm:text-lg bg-white dark:bg-gray-700 border-gray-300 dark:border-gray-600 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 transition-colors duration-300"
                rows="6"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω..."
            ></textarea>
        </div>

        <div class="flex flex-wrap items-center gap-4">
            <button
                id="generateButton"
                onclick="generateContent()"
                class="px-6 py-3 bg-purple-600 hover:bg-purple-700 dark:bg-purple-500 dark:hover:bg-purple-600 text-white rounded-lg transition-colors flex items-center gap-2 text-lg font-semibold disabled:opacity-50 disabled:cursor-not-allowed">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M13 10V3L4 14h7v7l9-11h-7z" /></svg>
                –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
            </button>
             <div id="loader" class="hidden items-center gap-2 text-gray-600 dark:text-gray-400">
                <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-purple-600 dark:border-purple-400"></div>
                <span>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è...</span>
            </div>
        </div>
    </div>

    <div id="result" class="hidden animate__animated animate__fadeIn">
        <div class="card bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 mb-8 transition-colors duration-300">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold text-gray-800 dark:text-white">–†–µ–∑—É–ª—å—Ç–∞—Ç:</h2>
                 <div class="flex gap-1 sm:gap-2">
                    <button onclick="copyToClipboard()" title="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å" class="p-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700 rounded-lg transition-colors">
                       <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" /></svg>
                    </button>
                    <button onclick="downloadAsFile()" title="–°–∫–∞—á–∞—Ç—å" class="p-2 text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700 rounded-lg transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" /></svg>
                    </button>
                </div>
            </div>
             <div id="output" class="prose prose-lg max-w-none dark:prose-invert mt-4 text-gray-800 dark:text-gray-200">
                </div>
            <div id="output-stats" class="text-sm text-gray-500 dark:text-gray-400 mt-3"></div>

            <div class="mt-6 pt-4 border-t dark:border-gray-600">
               <p class="text-sm text-gray-600 dark:text-gray-400 mb-3">–û—Ü–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</p>
               <div class="flex flex-wrap gap-3">
                    <button onclick="rateResult(5)" class="px-4 py-2 text-sm sm:text-base bg-green-100 hover:bg-green-200 dark:bg-green-800 dark:hover:bg-green-700 text-green-800 dark:text-green-100 rounded-lg transition-colors">üëç –û—Ç–ª–∏—á–Ω–æ</button>
                    <button onclick="rateResult(3)" class="px-4 py-2 text-sm sm:text-base bg-yellow-100 hover:bg-yellow-200 dark:bg-yellow-800 dark:hover:bg-yellow-700 text-yellow-800 dark:text-yellow-100 rounded-lg transition-colors">üòê –ù–æ—Ä–º–∞–ª—å–Ω–æ</button>
                    <button onclick="rateResult(1)" class="px-4 py-2 text-sm sm:text-base bg-red-100 hover:bg-red-200 dark:bg-red-800 dark:hover:bg-red-700 text-red-800 dark:text-red-100 rounded-lg transition-colors">üëé –ü–ª–æ—Ö–æ</button>
                </div>
            </div>
        </div>
    </div>

    <div id="historyModal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-75 dark:bg-opacity-80 flex items-center justify-center z-50 p-4 animate__animated animate__fadeIn animate__faster">
        <div class="bg-white dark:bg-gray-800 w-full max-w-2xl rounded-lg shadow-xl max-h-[80vh] flex flex-col animate__animated animate__zoomIn animate__faster">
            <div class="flex justify-between items-center p-4 border-b dark:border-gray-600 flex-shrink-0">
                <h3 class="text-xl font-bold text-gray-800 dark:text-white">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤</h3>
                <button onclick="hideHistory()" class="text-gray-500 hover:text-gray-800 dark:text-gray-400 dark:hover:text-white transition-colors" aria-label="–ó–∞–∫—Ä—ã—Ç—å">‚úï</button>
            </div>
             <div id="historyList" class="p-4 space-y-3 overflow-y-auto flex-grow">
                </div>
             <div class="p-4 border-t dark:border-gray-600 text-center flex-shrink-0">
                <button onclick="clearHistory()" class="text-sm text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300 transition-colors hover:underline">
                    –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é
                </button>
            </div>
        </div>
    </div>

</div> <div id="toast-container" class="fixed bottom-5 right-5 z-50 space-y-2"></div>


<script>
    // --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ---
    let history = []; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º, –∑–∞–≥—Ä—É–∑–∏–º –ø–æ–∑–∂–µ
    let darkMode = localStorage.getItem('darkMode') === 'true';
    const generateButton = document.getElementById('generateButton');
    const promptTextarea = document.getElementById('prompt');
    const resultDiv = document.getElementById('result');
    const outputDiv = document.getElementById('output');
    const statsDiv = document.getElementById('output-stats');
    const loaderDiv = document.getElementById('loader');
    const errorDiv = document.getElementById('errorMessage');
    const historyModal = document.getElementById('historyModal');
    const historyListDiv = document.getElementById('historyList');
    const toastContainer = document.getElementById('toast-container');

    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM ---
    document.addEventListener('DOMContentLoaded', () => {
        // 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑ localStorage
        history = JSON.parse(localStorage.getItem('contentHistory')) || [];

        // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É
        initTheme();

        // 3. –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é (–µ—Å–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ –∏–ª–∏ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
        renderHistory(); // –í—ã–∑—ã–≤–∞–µ–º –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞

        // 4. –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫ —à–∞–±–ª–æ–Ω–∞–º
        setupTemplateListeners();
    });

    // --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–æ–π ---
    function initTheme() {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å dark-mode –∫ body –∏ html –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
        document.documentElement.classList.toggle('dark', darkMode); // –î–ª—è Tailwind dark: –ø—Ä–µ—Ñ–∏–∫—Å–∞
        // document.body.classList.toggle('dark-mode', darkMode); // –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±, –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –µ—Å–ª–∏ –≤—Å–µ —á–µ—Ä–µ–∑ dark:
    }

    function toggleDarkMode() {
        darkMode = !darkMode;
        localStorage.setItem('darkMode', darkMode);
        initTheme(); // –ü–µ—Ä–µ–ø—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∫ <html>

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç/–∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã (—Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏)
        const themeButton = document.querySelector('button[onclick="toggleDarkMode()"]');
        if (themeButton) {
            // –ù–∞—Ö–æ–¥–∏–º –æ–±–∞ span –≤–Ω—É—Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏
            const lightModeSpan = themeButton.querySelector('span:not(.dark\\:hidden)'); // –¢–æ—Ç, —á—Ç–æ –≤–∏–¥–µ–Ω –≤ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º–µ
            const darkModeSpan = themeButton.querySelector('span.hidden.dark\\:inline'); // –¢–æ—Ç, —á—Ç–æ –≤–∏–¥–µ–Ω –≤ —Ç–µ–º–Ω–æ–π —Ç–µ–º–µ

            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∏—Ö –≤–∏–¥–∏–º–æ—Å—Ç—å —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –Ω–∞ null
            if (lightModeSpan) {
                lightModeSpan.classList.toggle('hidden', darkMode);
            }
            if (darkModeSpan) {
                darkModeSpan.classList.toggle('hidden', !darkMode);
            }
        }
    }

     // --- –®–∞–±–ª–æ–Ω—ã ---
     const templatePrompts = {
        blog: "–ù–∞–ø–∏—à–∏ SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è –±–ª–æ–≥–∞ –Ω–∞ —Ç–µ–º—É: ",
        social: "–°–æ–∑–¥–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—Ç –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π –æ: ",
        product: "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥–∞—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: "
    };

    function setupTemplateListeners() {
        document.querySelectorAll('.template-card').forEach(card => {
            card.addEventListener('click', () => {
                const templateType = card.dataset.template;
                const basePrompt = templatePrompts[templateType] || "";
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞, –∑–∞–º–µ–Ω—è—è —Ç–µ–∫—É—â–∏–π
                promptTextarea.value = basePrompt;
                promptTextarea.focus(); // –°—Ç–∞–≤–∏–º —Ñ–æ–∫—É—Å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
            });
        });
    }


    // --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò—Å—Ç–æ—Ä–∏–µ–π ---
    function showHistory() {
        renderHistory(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º
        if (historyModal) {
           historyModal.classList.remove('hidden');
           historyModal.classList.remove('animate__fadeOut');
           historyModal.classList.add('animate__fadeIn');
           // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∫ body –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Ñ–æ–Ω–∞
           document.body.classList.add('overflow-hidden');
        }
    }

    function hideHistory() {
        if (historyModal) {
           historyModal.classList.remove('animate__fadeIn');
           historyModal.classList.add('animate__fadeOut');
           // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å hidden –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
           setTimeout(() => {
               historyModal.classList.add('hidden');
           }, 300); // –î–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ animate__faster
           // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
           document.body.classList.remove('overflow-hidden');
        }
    }

    function renderHistory() {
        if (!historyListDiv) return;

        if (history.length === 0) {
            historyListDiv.innerHTML = '<p class="text-center text-gray-500 dark:text-gray-400">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—É—Å—Ç–∞.</p>';
            return;
        }

        // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω —Å–∏–Ω—Ç–∞–∫—Å–∏—Å ${} –∏ onclick
        historyListDiv.innerHTML = history.map((item, index) => `
            <div class="history-item group p-4 border dark:border-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 relative transition-colors duration-200">
                <div class="cursor-pointer" onclick="loadHistoryItem(${index})">
                    <div class="text-xs text-gray-500 dark:text-gray-400 mb-1">${item.date}</div>
                    <div class="font-semibold truncate dark:text-white mb-1">–ü—Ä–æ–º–ø—Ç: ${item.prompt}</div>
                    <p class="text-sm text-gray-600 dark:text-gray-300 truncate">–†–µ–∑—É–ª—å—Ç–∞—Ç: ${item.result.substring(0, 100)}${item.result.length > 100 ? '...' : ''}</p>
                </div>
                <button
                    onclick="deleteHistoryItem(${index}, event)"
                    title="–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å"
                    class="absolute top-2 right-2 p-1 text-gray-400 hover:text-red-500 dark:hover:text-red-400 opacity-0 group-hover:opacity-100 focus:opacity-100 transition-opacity"
                    aria-label="–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                    </svg>
                </button>
            </div>
            `).join('');
        }

    function loadHistoryItem(index) {
        if (history[index]) {
            const item = history[index];
            promptTextarea.value = item.prompt;
            displayResult(item.result); // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            hideHistory();
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
            resultDiv.scrollIntoView({ behavior: 'smooth', block: 'start' });
        } else {
            console.error("–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Å –∏–Ω–¥–µ–∫—Å–æ–º:", index);
            showError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏.");
        }
    }

    function deleteHistoryItem(index, event) {
        event.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏?')) {
            history.splice(index, 1);
            localStorage.setItem('contentHistory', JSON.stringify(history));
            renderHistory(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
        }
    }

    function clearHistory() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–æ–≤? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.')) {
            history = [];
            localStorage.removeItem('contentHistory');
            renderHistory(); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        }
    }

    function saveToHistory(prompt, result) {
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 50 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π)
        const maxHistorySize = 50;
        history.unshift({
            date: new Date().toLocaleString('ru-RU'), // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å –¥–ª—è –¥–∞—Ç—ã
            prompt,
            result
        });
        if (history.length > maxHistorySize) {
            history.pop(); // –£–¥–∞–ª—è–µ–º —Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
        }
        localStorage.setItem('contentHistory', JSON.stringify(history));
        // –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –∑–¥–µ—Å—å, –µ—Å–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ
        // renderHistory();
    }

    // --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ---
    async function generateContent() {
        const prompt = promptTextarea.value.trim();
        if (!prompt) {
             showError('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω.');
             return;
        }

        // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∏ —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã/–æ—à–∏–±–∫–∏
        generateButton.disabled = true;
        resultDiv.classList.add('hidden');
        hideError(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –æ—à–∏–±–∫–∏

        try {
            showLoader();
            const response = await fetch('/generate', {
                method: 'POST',
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                body: new URLSearchParams({prompt})
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.error || `–°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª –æ—à–∏–±–∫–æ–π ${response.status}`);
            }

            displayResult(data.content);
            saveToHistory(prompt, data.content);

        } catch (error) {
            console.error("Frontend generation error:", error);
            showError(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
        } finally {
            hideLoader();
            generateButton.disabled = false;
        }
    }

    // --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ---
    function displayResult(text) {
        // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ outputDiv —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!outputDiv) return;

        // 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ Tailwind Prose
        // (–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∏ –∫–ª–∞—Å—Å—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –≤–∞—à–µ–º—É HTML)
        outputDiv.className = 'prose prose-lg max-w-none dark:prose-invert mt-4 text-gray-800 dark:text-gray-200';

        // 2. –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –Ω–∞ <br> –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ innerHTML
        // –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å <br> –∫–∞–∫ HTML-—Ç–µ–≥
        outputDiv.innerHTML = text.replace(/\n/g, '<br>');

        // 3. –°—á–∏—Ç–∞–µ–º —Å–∏–º–≤–æ–ª—ã –∏ —Å–ª–æ–≤–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        const charCount = text.length;
        const wordCount = text.trim() ? text.trim().split(/\s+/).length : 0;

        if (statsDiv) {
            statsDiv.textContent = `–°–∏–º–≤–æ–ª–æ–≤: ${charCount} | –°–ª–æ–≤: ${wordCount}`;
        }

        // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        if (resultDiv) {
          resultDiv.classList.remove('hidden');
          resultDiv.classList.remove('animate__fadeIn');
          void resultDiv.offsetWidth; // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏
          resultDiv.classList.add('animate__fadeIn');
        }
    }


    // --- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ UI (Loader, Errors, Toasts) ---
    function showLoader() {
        if(loaderDiv) loaderDiv.classList.remove('hidden');
    }

    function hideLoader() {
        if(loaderDiv) loaderDiv.classList.add('hidden');
    }

    function showError(message) {
        if (!errorDiv) return;
        errorDiv.textContent = message;
        errorDiv.style.display = 'block';
        errorDiv.classList.remove('hidden');

        errorDiv.classList.remove('animate__animated', 'animate__fadeIn', 'animate__fadeOut');
        void errorDiv.offsetWidth;
        errorDiv.classList.add('animate__animated', 'animate__fadeIn');

        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä —Å–∫—Ä—ã—Ç–∏—è, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
        if (errorDiv.hideTimeout) clearTimeout(errorDiv.hideTimeout);

        errorDiv.hideTimeout = setTimeout(() => {
            hideError(); // –°–∫—Ä—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é
        }, 7000); // –£–≤–µ–ª–∏—á–µ–Ω–æ –≤—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏
    }

    function hideError() {
        if (!errorDiv || errorDiv.style.display === 'none') return;

        errorDiv.classList.remove('animate__fadeIn');
        errorDiv.classList.add('animate__fadeOut');
        setTimeout(() => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–∫—Ä—ã—Ç–∞ (–Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –Ω–æ–≤–∞—è)
            if (errorDiv.classList.contains('animate__fadeOut')) {
                 errorDiv.style.display = 'none';
                 errorDiv.classList.remove('animate__animated', 'animate__fadeOut');
            }
        }, 500); // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ fadeOut
    }

    function showToast(message, type = 'success') {
        if (!toastContainer) return;

        const toast = document.createElement('div');
        const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500'; // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã
        toast.className = `p-3 rounded-lg shadow-md text-white ${bgColor} animate__animated animate__fadeInRight`;
        toast.textContent = message;

        toastContainer.appendChild(toast);

        setTimeout(() => {
            toast.classList.remove('animate__fadeInRight');
            toast.classList.add('animate__fadeOutRight');
            setTimeout(() => {
                toast.remove();
            }, 500); // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ fadeOut
        }, 3000); // –í—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ —Ç–æ—Å—Ç–∞
    }


    // --- –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –£—Ç–∏–ª–∏—Ç—ã ---
    function rateResult(score) {
        const content = outputDiv ? outputDiv.innerText : '';
        if (!content) return; // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ü–µ–Ω–∫—É –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

        fetch('/feedback', { // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ /feedback –µ—Å—Ç—å –Ω–∞ Node.js —Å–µ—Ä–≤–µ—Ä–µ
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({score, content: content.substring(0, 500)}) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        })
        .then(response => {
            if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ü–µ–Ω–∫–∏');
            showToast("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!");
        })
        .catch(err => {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏: ', err);
            showError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É.");
        });
    }

    function copyToClipboard() {
        const outputText = outputDiv ? outputDiv.innerText : '';
        if (!outputText) return;

        navigator.clipboard.writeText(outputText)
            .then(() => showToast("–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!"))
            .catch(err => {
                console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ', err);
                showError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç.");
            });
    }

    function downloadAsFile() {
        const text = outputDiv ? outputDiv.innerText : '';
        if (!text) return;

        // –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
        const promptText = promptTextarea.value.substring(0,30).replace(/[^a-z0-9]/gi, '_').toLowerCase();
        const filename = promptText ? `ai_content_${promptText}.txt` : 'ai_generated_content.txt';

        const blob = new Blob([text], {type: 'text/plain;charset=utf-8'}); // –£–∫–∞–∑–∞–Ω–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∞
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = filename;
        document.body.appendChild(a); // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –≤ DOM –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        a.click();
        document.body.removeChild(a); // –£–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫—É
        URL.revokeObjectURL(url); // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–∞–º—è—Ç—å
    }

</script>
</body>
</html>